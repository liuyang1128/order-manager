<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.orders.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.orders.pojo.po.Role">
        <!--
          WARNING - @mbg.generated
        -->
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="role_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="operator" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="delete_status" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="store_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        </constructor>
    </resultMap>

    <resultMap id="rolePermissionMap" type="com.orders.pojo.vo.RolePermissionVo">
        <id column="r_id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="description" property="description"/>
        <result column="store_id" property="storeId"/>
        <collection property="permissions" ofType="com.orders.pojo.vo.PermissionVo">
            <id column="p_id" property="id"/>
            <result column="menu_code" property="menuCode"/>
            <result column="menu_name" property="menuName"/>
            <result column="permission_code" property="permissionCode"/>
            <result column="permission_name" property="permissionName"/>
        </collection>
    </resultMap>

    <select id="findRoleByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">

        select *
        from role
        where role.id in (SELECT role_id
                          from user_role
                          where user_id = #{userId})
    </select>

    <select id="findUserCountByRoleId" parameterType="map" resultType="java.lang.Integer">
        select count(*)
        from user
        where id in (SELECT user_id
                     from user_role
                     where user_role.role_id = #{roleId}) And store_id = #{storeId}
    </select>


    <select id="findRolePermissionByRoleId" parameterType="java.lang.Long" resultMap="rolePermissionMap">
        SELECT
            r.id r_id,
            r.role_name,
            r.description,
            r.operator,
            r.store_id,
            r.delete_status,
            p.id p_id,
            p.menu_name,
            p.menu_code,
            p.permission_code,
            p.permission_name
        FROM role r
            LEFT JOIN role_permission rp ON r.id = rp.role_id
            LEFT JOIN permission p ON rp.permission_id = p.id
        WHERE (r.store_id = #{storeId} OR r.store_id = 0)
              AND
              (r.id NOT BETWEEN 1 AND 2 AND r.delete_status = 1)
    </select>

    <insert id="insertUserRole" parameterType="map">
        insert into user_role (user_id, role_id) values (#{userId}, #{roleId})
    </insert>
    <insert id="insertRolePermission" parameterType="map">
        INSERT INTO `role_permission`
        (role_id, permission_id, operator) VALUES
            (#{rid}, #{pid}, 1);
    </insert>


</mapper>